// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

#ifndef PROTOBUF_demo_2eproto__INCLUDED
#define PROTOBUF_demo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_demo_2eproto();
void protobuf_AssignDesc_demo_2eproto();
void protobuf_ShutdownFile_demo_2eproto();

class Demo;

// ===================================================================

class Demo : public ::google::protobuf::Message {
 public:
  Demo();
  virtual ~Demo();

  Demo(const Demo& from);

  inline Demo& operator=(const Demo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Demo& default_instance();

  void Swap(Demo* other);

  // implements Message ----------------------------------------------

  Demo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Demo& from);
  void MergeFrom(const Demo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated string context = 2;
  inline int context_size() const;
  inline void clear_context();
  static const int kContextFieldNumber = 2;
  inline const ::std::string& context(int index) const;
  inline ::std::string* mutable_context(int index);
  inline void set_context(int index, const ::std::string& value);
  inline void set_context(int index, const char* value);
  inline void set_context(int index, const char* value, size_t size);
  inline ::std::string* add_context();
  inline void add_context(const ::std::string& value);
  inline void add_context(const char* value);
  inline void add_context(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& context() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_context();

  // @@protoc_insertion_point(class_scope:Demo)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> context_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_demo_2eproto();
  friend void protobuf_AssignDesc_demo_2eproto();
  friend void protobuf_ShutdownFile_demo_2eproto();

  void InitAsDefaultInstance();
  static Demo* default_instance_;
};
// ===================================================================


// ===================================================================

// Demo

// required int32 ID = 1;
inline bool Demo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Demo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Demo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Demo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Demo::id() const {
  return id_;
}
inline void Demo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated string context = 2;
inline int Demo::context_size() const {
  return context_.size();
}
inline void Demo::clear_context() {
  context_.Clear();
}
inline const ::std::string& Demo::context(int index) const {
  return context_.Get(index);
}
inline ::std::string* Demo::mutable_context(int index) {
  return context_.Mutable(index);
}
inline void Demo::set_context(int index, const ::std::string& value) {
  context_.Mutable(index)->assign(value);
}
inline void Demo::set_context(int index, const char* value) {
  context_.Mutable(index)->assign(value);
}
inline void Demo::set_context(int index, const char* value, size_t size) {
  context_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Demo::add_context() {
  return context_.Add();
}
inline void Demo::add_context(const ::std::string& value) {
  context_.Add()->assign(value);
}
inline void Demo::add_context(const char* value) {
  context_.Add()->assign(value);
}
inline void Demo::add_context(const char* value, size_t size) {
  context_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Demo::context() const {
  return context_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Demo::mutable_context() {
  return &context_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_demo_2eproto__INCLUDED
